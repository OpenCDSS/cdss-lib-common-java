// TSGraphJComponent_SaveAsSVG - Basik SVG file writer

/* NoticeStart

CDSS Common Java Library
CDSS Common Java Library is a part of Colorado's Decision Support Systems (CDSS)
Copyright (C) 1994-2024 Colorado Department of Natural Resources

CDSS Common Java Library is free software:  you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

CDSS Common Java Library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

You should have received a copy of the GNU General Public License
    along with CDSS Common Java Library.  If not, see <https://www.gnu.org/licenses/>.

NoticeEnd */

package RTi.GRTS;

import RTi.Util.IO.IOUtil;
import java.awt.Graphics;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;

/**
 * By keeping this code out of TSGraphJComponent (or other classes) and keeping
 * this classes interface API neutral with respect to batik,
 * can allow Batik functionality to be dynamically enabled/disabled by the presence of those classes in the default classpath.
 */
class TSGraphJComponent_SaveAsSVG {

    static Graphics createGraphics() {
        // Get a DOMImplementation.
        DOMImplementation domImpl = GenericDOMImplementation.getDOMImplementation();

        // Create an instance of org.w3c.dom.Document.
        String svgNS = "http://www.w3.org/2000/svg";
        Document document = domImpl.createDocument(svgNS, "svg", null);

        // Tell SVG to embed the fonts.
        SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(document);
        ctx.setComment("Generated by " + IOUtil.getProgramName() + " with Batik SVG Generator");
        // Seems like the fonts are pretty ugly, at least when viewed in Internet Explorer Adobe plugin.
        ctx.setEmbeddedFontsOn(true);

        // Create an instance of the SVG Generator.
        return new SVGGraphics2D(ctx, false);
    }

    /**
     * Save the graphics to a file.
     * @param graphics the Batik SVGGraphics2D instance for drawing
     * @param path path to the SVG file to save
     * @throws IOException
     */
    static void saveGraphics(Graphics graphics,String path) throws IOException {
        // Finally, stream out SVG to the standard output using UTF-8 encoding.
        boolean useCSS = true; // Want to use CSS style attributes.
        FileOutputStream outf = new FileOutputStream ( path );
        Writer out = new OutputStreamWriter(outf, "UTF-8");
        ((SVGGraphics2D)graphics).stream(out, useCSS);
        outf.flush();
        outf.close();
    }
}